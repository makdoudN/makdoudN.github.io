1. Context

In competitive games and sports, skill ratings provide a way to estimate the skill levels of players. 
This rating is valuable because it enables fair matchmaking, allows players to track their progress, and fosters engagement and competition. 
Many modern rating systems rely on data from players' win/loss records to estimate skill levels automatically.
The underlying challenge is to define a model that reflects each player's skill and uses these skills to predict outcomes in matches.

2. The Problem
We aim to create a skill rating model that can predict the probability of one player beating another based on their skill levels.
Key Assumptions:
-  Each player has an underlying strength or skill level.
- The skill gap between two players (rather than their absolute skill levels) determines the probability of a match outcome.

3. Modeling Approach

3.a Data Generative Process. The data generative process relies on the following assumptions:

1. Skill Distribution: Each player $i$ has an unknown skill level $s_i$, which can be treated as a random variable. In a Bayesian setting, we assume:

$$
s_i \sim \mathcal{N}\left(\mu_i, \sigma_i^2\right)
$$

where $\mu_i$ is the mean skill level, and $\sigma_i^2$ reflects the skill variance (uncertainty about $s_i$ ).
2. Match Outcome Probability: The probability of player $A$ beating player $B$ depends only on the skill gap $\Delta_{A B}=s_A-s_B$. Specifically:

$$
P\left(A \text { beats } B \mid s_A, s_B\right)=\Phi\left(\frac{\Delta_{A B}}{\sqrt{2} \beta}\right)
$$

where $\Phi$ is the cumulative density function of a normal distribution, and $\beta$ is a scaling parameter that controls the influence of the skill gap on the probability of winning. 
This function implies that larger skill gaps correspond to higher probabilities of victory.
It is better to understand the relationship between the skills ($s_A$ and $s_B$) and the skill gap ($\Delta_{AB}$) through the lens of a deterministic function rather than the cumulated normal distribution.. 

3.b Graphical Model

The equivalent graphical model can be structured as follows:
- Skill Nodes: We have latent nodes $s_A$ and $s_B$ representing the unknown skill levels of players $A$ and $B$.
- Skill Gap (Deterministic Node): $\Delta_{A B}=s_A-s_B$ is a deterministic function of $s_A$ and $s_B$. 
  It is not an independent random variable but is used to compute the probability of outcomes.
- Outcome Node: The match outcome $X_{A \triangleright B}$ (representing whether $A$ beats $B$ ) is observed and depends only on $\Delta_{A B}$.

Graphically:
$$
s_A \rightarrow \Delta_{A B} \leftarrow s_B \quad \text { and } \quad \Delta_{A B} \rightarrow X_{A \triangleright B}
$$

Bayesian Specification:
To model the players' skill levels and outcomes, we specify a Bayesian generative process:
1. Prior on Skill Levels: Assume each player's skill $s_i$ follows a normal distribution, representing our uncertainty about their true skill level:

$$
s_i \sim \mathcal{N}\left(\mu_i, \sigma_i^2\right)
$$

where $\mu_i$ is the mean skill level for player $i$, and $\sigma_i^2$ captures the variability in our prior belief about their skill.
2. Outcome Probability: The probability that player $A$ beats player $B$ depends on the skill gap $\Delta_{A B}=s_A-s_B$. Assuming a logistic or probit model for this dependency, we can write:

$$
P\left(X_{A \triangleright B}=1 \mid s_A, s_B\right)=\Phi\left(\frac{\Delta_{A B}}{\sqrt{2} \beta}\right)
$$

where $\Phi$ is the CDF of a standard normal distribution, and $\beta$ is a scaling parameter controlling the sensitivity to skill differences.

2. Full Joint Density Derivation

Based on the model's Bayesian specification and the dependencies in the graphical model, the joint density for the observed and latent variables can be derived as follows:
1. Joint Density Structure: The full joint density of the observable outcome $X_{A \triangleright B}$ and latent skills $s_A$ and $s_B$ can be decomposed based on the graphical model:

$$
P\left(X_{A \triangleright B}, s_A, s_B\right)=P\left(X_{A \triangleright B} \mid \Delta_{A B}\right) P\left(s_A\right) P\left(s_B\right)
$$

2. Component Densities:
- Prior Densities for Skills:

$$
P\left(s_A\right)=\mathcal{N}\left(s_A \mid \mu_A, \sigma_A^2\right), \quad P\left(s_B\right)=\mathcal{N}\left(s_B \mid \mu_B, \sigma_B^2\right)
$$

- Outcome Probability Conditional on Skill Gap:

$$
P\left(X_{A \triangleright B}=1 \mid \Delta_{A B}\right)=\Phi\left(\frac{\Delta_{A B}}{\sqrt{2} \beta}\right)
$$

3. Full Joint Density: Substituting the component densities, the joint density becomes:

$$
P\left(X_{A \triangleright B}, s_A, s_B\right)=\Phi\left(\frac{s_A-s_B}{\sqrt{2} \beta}\right) \cdot \mathcal{N}\left(s_A \mid \mu_A, \sigma_A^2\right) \cdot \mathcal{N}\left(s_B \mid \mu_B, \sigma_B^2\right)
$$
3. Posterior Inference

Using this joint density, we can perform posterior inference on the skill levels $s_A$ and $s_B$ given observed outcomes. The posterior distribution for $s_A$ and $s_B$ is proportional to the joint density with the observed outcome:

$$
P\left(s_A, s_B \mid X_{A \triangleright B}=1\right) \propto \Phi\left(\frac{s_A-s_B}{\sqrt{2} \beta}\right) \cdot \mathcal{N}\left(s_A \mid \mu_A, \sigma_A^2\right) \cdot \mathcal{N}\left(s_B \mid \mu_B, \sigma_B^2\right)
$$
